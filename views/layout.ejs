<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/font/css/fa-brands.css">
    <link rel="stylesheet" href="/font/css/fa-brands.min.css">
    <link rel="stylesheet" href="/font/css/fa-regular.css">
    <link rel="stylesheet" href="/font/css/fa-regular.min.css">
    <link rel="stylesheet" href="/font/css/fa-solid.css">
    <link rel="stylesheet" href="/font/css/fa-solid.min.css">
    <link rel="stylesheet" href="/font/css/fontawesome-all.css">
    <link rel="stylesheet" href="/font/css/fontawesome-all.min.css">
    <link rel="stylesheet" href="/font/css/fontawesome.css">
    <link rel="stylesheet" href="/font/css/fontawesome.min.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap-grid.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap-grid.min.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap-reboot.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap-reboot.min.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/style.css">
    <!--STYLES END-->
  </head>

  <body>
    <%- body %>
    <!--Nave-side of dashboard-->
    <%if (typeof user != "undefined") { %>
    <div class="nav-side-menu">
      <div class="brand">FastInbox - <%= user.role+" "+user.username %>
        <a href="/logout" class="fas fa-sign-out-alt">Log out</a>
      </div>

      <i class="fa fa-bars fa-2x toggle-btn" data-toggle="collapse" data-target="#menu-content"></i>
      <div class="menu-list">
        <ul id="menu-content" class="menu-content collapse out">
          <li <%if (req.url=="/") { %> class="active"<%}%>>
            <a href="/">
              <i class="fa fa-tachometer-alt fa-lg"></i> Dashboard
            </a>
          </li>

          <li <%if (req.url.includes("/subscribers")) { %> class="active"<%}%>>
            <a href="/subscribers">
              <i class="fa fa-user fa-lg"></i> Subscribers
            </a>
          </li>

          <li data-toggle="collapse" data-target="#service" class="collapsed">
            <a href="#"><i class="fa fa-globe fa-list"></i> Lists <span class="fa fa fa-angle-down arrow"></span></a>
          </li>
          <ul class="sub-menu collapse" id="service">
            <li>Lists</li>
            <li>Segments</li>
            <li>Process invalid emails</li>
          </ul>


          <li data-toggle="collapse" data-target="#new" class="collapsed">
            <a href="#"><i class="fa fa fa-wrench fa-lg"></i> Tools <span class="fa fa fa-angle-down arrow"></span></a>
          </li>
          <ul class="sub-menu collapse" id="new">
            <li>Import subscribers</li>
            <li>Export subscribers</li>
          </ul>


          <li>
            <a href="#">
              <i class="fa fa-envelope-square fa-lg"></i> Template Email
            </a>
          </li>

          <li>
            <a href="#">
              <i class="fa fa-hourglass-end fa-lg"></i> Campaign
            </a>
          </li>
        </ul>
      </div>
    </div>
    <%} %>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/jquery/jquery-3.3.1.min.js"></script>
    <script src="/js/bootstrap/bootstrap.bundle.js"></script>
    <script src="/js/bootstrap/bootstrap.bundle.min.js"></script>
    <script src="/js/bootstrap/bootstrap.js"></script>
    <script src="/js/bootstrap/bootstrap.min.js"></script>
    <script src="/js/vuejs/vue.min.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
